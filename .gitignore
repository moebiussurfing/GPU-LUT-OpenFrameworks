#########################
# general patterns
#########################

##-------------------------------

## can exclude some sttings files

#*.XML
#*.xml
#*.JSON
#*.json

#*/bin/*
#!*/bin/data/

# for bin folder in root
#/bin/*
#!/bin/data/

##-------------------------------

docs/html
docs/tagfile.xml

[Bb]uild/
[Oo]bj/
*.o
[Dd]ebug*/
[Rr]elease*/
*.mode*
*.app/
*.pyc
.svn/

#########################
# IDE
#########################

# VS2017
*.vcxproj
*.vcxproj.*
icon.rc
*.vs
*.vs/
*.vs/*
*.vs/
*.sln
*.filters
*.user

#vs2017
*.sln
*.vcxproj
*.vcxproj.filters
*.vcxproj.user
icon.rc
*.vs/*

##-------------------------------

# XCode
*.xcodeproj
*.pbxuser
*.perspective
*.perspectivev3
*.mode1v3
*.mode2v3
#XCode 4
xcuserdata
*.xcworkspace
*.xcodeproj/project.pbxproj
*.xcodeproj/xcshareddata/xcschemes/

# AppCode
*.idea
*.idea/
*.idea/*
*.idea/
*/.idea/workspace.xml

# Code::Blocks
*.depend
*.layout
*.cbTemp

# Visual Studio
*.sdf
*.opensdf
*.suo
*.pdb
*.ilk
*.aps
ipch/

# Eclipse
.metadata
local.properties
.externalToolBuilders

# Codelite
*.session
*.tags
*.workspace.*

#########################
# operating system
#########################

# Linux
*~
# KDE
.directory
.AppleDouble

# OSX
.DS_Store
*.swp
*~.nib
# Thumbnails
._*

# Windows
# Windows image file caches
Thumbs.db
# Folder config file
Desktop.ini

#Android
.csettings

#########################
# packages
#########################

# it's better to unpack these files and commit the raw source
# git has its own built in compression methods
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip

# Logs and databases
*.log
*.sql
*.sqlite


##-------------------------------

## more c++ patterns
## https://github.com/github/gitignore/blob/master/C%2B%2B.gitignore

# Prerequisites
*.d

# Compiled Object files
*.slo
*.lo
*.o
*.obj

# Precompiled Headers
*.gch
*.pch

# Compiled Dynamic libraries
*.so
*.dylib
*.dll

# Fortran module files
*.mod
*.smod

# Compiled Static libraries
*.lai
*.la
*.a
*.lib

# Executables
*.exe
*.out
*.app


##-----------------------------------------------------------------

## more VS patterns
## https://github.com/github/gitignore/blob/master/VisualStudio.gitignore


## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Mono auto generated files
mono_crash.*

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
#[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/

# Visual Studio 2015/2017 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# Visual Studio 2017 auto generated files
Generated\ Files/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUnit
*.VisualState.xml
TestResult.xml
nunit-*.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# Benchmark Results
BenchmarkDotNet.Artifacts/

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# StyleCop
StyleCopReport.xml

# Files built by Visual Studio
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.iobj
*.pch
*.pdb
*.ipdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# Visual Studio Trace Files
*.e2e

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# AxoCover is a Code Coverage Tool
.axoCover/*
!.axoCover/settings.json

# Coverlet is a free, cross platform Code Coverage Tool
coverage*[.json, .xml, .info]

# Visual Studio code coverage results
*.coverage
*.coveragexml

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# NuGet Packages
*.nupkg
# NuGet Symbol Packages
*.snupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!?*.[Cc]ache/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs

# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.rsuser
*- [Bb]ackup.rdl
*- [Bb]ackup ([0-9]).rdl
*- [Bb]ackup ([0-9][0-9]).rdl

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat
node_modules/

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
*.vbw

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# CodeRush personal settings
.cr/personal

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# Tabs Studio
*.tss

# Telerik's JustMock configuration file
*.jmconfig

# BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# OpenCover UI analysis results
OpenCover/

# Azure Stream Analytics local run output
ASALocalRun/

# MSBuild Binary and Structured Log
*.binlog

# NVidia Nsight GPU debugger configuration file
*.nvuser

# MFractors (Xamarin productivity tool) working folder
.mfractor/

# Local History for Visual Studio
.localhistory/

# BeatPulse healthcheck temp database
healthchecksdb

# Backup folder for Package Reference Convert tool in Visual Studio 2017
MigrationBackup/

# Ionide (cross platform F# VS Code tools) working folder
.ionide/
bin/data/LUT/Cinematic-1.cube
bin/data/LUT/Cinematic-10.cube
bin/data/LUT/Cinematic-100.cube
bin/data/LUT/Cinematic-101.cube
bin/data/LUT/Cinematic-102.cube
bin/data/LUT/Cinematic-103.cube
bin/data/LUT/Cinematic-104.cube
bin/data/LUT/Cinematic-105.cube
bin/data/LUT/Cinematic-106.cube
bin/data/LUT/Cinematic-107.cube
bin/data/LUT/Cinematic-108.cube
bin/data/LUT/Cinematic-109.cube
bin/data/LUT/Cinematic-11.cube
bin/data/LUT/Cinematic-110.cube
bin/data/LUT/Cinematic-111.cube
bin/data/LUT/Cinematic-112.cube
bin/data/LUT/Cinematic-113.cube
bin/data/LUT/Cinematic-114.cube
bin/data/LUT/Cinematic-115.cube
bin/data/LUT/Cinematic-116.cube
bin/data/LUT/Cinematic-12.cube
bin/data/LUT/Cinematic-13.cube
bin/data/LUT/Cinematic-14.cube
bin/data/LUT/Cinematic-15.cube
bin/data/LUT/Cinematic-16.cube
bin/data/LUT/Cinematic-17.cube
bin/data/LUT/Cinematic-18.cube
bin/data/LUT/Cinematic-19.cube
bin/data/LUT/Cinematic-2.cube
bin/data/LUT/Cinematic-20.cube
bin/data/LUT/Cinematic-21.cube
bin/data/LUT/Cinematic-22.cube
bin/data/LUT/Cinematic-23.cube
bin/data/LUT/Cinematic-24.cube
bin/data/LUT/Cinematic-25.cube
bin/data/LUT/Cinematic-26.cube
bin/data/LUT/Cinematic-27.cube
bin/data/LUT/Cinematic-28.cube
bin/data/LUT/Cinematic-29.cube
bin/data/LUT/Cinematic-3.cube
bin/data/LUT/Cinematic-30.cube
bin/data/LUT/Cinematic-31.cube
bin/data/LUT/Cinematic-32.cube
bin/data/LUT/Cinematic-33.cube
bin/data/LUT/Cinematic-34.cube
bin/data/LUT/Cinematic-35.cube
bin/data/LUT/Cinematic-36.cube
bin/data/LUT/Cinematic-37.cube
bin/data/LUT/Cinematic-38.cube
bin/data/LUT/Cinematic-39.cube
bin/data/LUT/Cinematic-4.cube
bin/data/LUT/Cinematic-40.cube
bin/data/LUT/Cinematic-41.cube
bin/data/LUT/Cinematic-42.cube
bin/data/LUT/Cinematic-43.cube
bin/data/LUT/Cinematic-44.cube
bin/data/LUT/Cinematic-45.cube
bin/data/LUT/Cinematic-46.cube
bin/data/LUT/Cinematic-47.cube
bin/data/LUT/Cinematic-48.cube
bin/data/LUT/Cinematic-49.cube
bin/data/LUT/Cinematic-5.cube
bin/data/LUT/Cinematic-50.cube
bin/data/LUT/Cinematic-51.cube
bin/data/LUT/Cinematic-52.cube
bin/data/LUT/Cinematic-53.cube
bin/data/LUT/Cinematic-54.cube
bin/data/LUT/Cinematic-55.cube
bin/data/LUT/Cinematic-56.cube
bin/data/LUT/Cinematic-57.cube
bin/data/LUT/Cinematic-58.cube
bin/data/LUT/Cinematic-59.cube
bin/data/LUT/Cinematic-6.cube
bin/data/LUT/Cinematic-60.cube
bin/data/LUT/Cinematic-61.cube
bin/data/LUT/Cinematic-62.cube
bin/data/LUT/Cinematic-63.cube
bin/data/LUT/Cinematic-64.cube
bin/data/LUT/Cinematic-65.cube
bin/data/LUT/Cinematic-66.cube
bin/data/LUT/Cinematic-67.cube
bin/data/LUT/Cinematic-68.cube
bin/data/LUT/Cinematic-69.cube
bin/data/LUT/Cinematic-7.cube
bin/data/LUT/Cinematic-70.cube
bin/data/LUT/Cinematic-71.cube
bin/data/LUT/Cinematic-72.cube
bin/data/LUT/Cinematic-73.cube
bin/data/LUT/Cinematic-74.cube
bin/data/LUT/Cinematic-75.cube
bin/data/LUT/Cinematic-76.cube
bin/data/LUT/Cinematic-77.cube
bin/data/LUT/Cinematic-78.cube
bin/data/LUT/Cinematic-79.cube
bin/data/LUT/Cinematic-8.cube
bin/data/LUT/Cinematic-80.cube
bin/data/LUT/Cinematic-81.cube
bin/data/LUT/Cinematic-82.cube
bin/data/LUT/Cinematic-83.cube
bin/data/LUT/Cinematic-84.cube
bin/data/LUT/Cinematic-85.cube
bin/data/LUT/Cinematic-86.cube
bin/data/LUT/Cinematic-87.cube
bin/data/LUT/Cinematic-88.cube
bin/data/LUT/Cinematic-89.cube
bin/data/LUT/Cinematic-9.cube
bin/data/LUT/Cinematic-90.cube
bin/data/LUT/Cinematic-91.cube
bin/data/LUT/Cinematic-92.cube
bin/data/LUT/Cinematic-93.cube
bin/data/LUT/Cinematic-94.cube
bin/data/LUT/Cinematic-95.cube
bin/data/LUT/Cinematic-96.cube
bin/data/LUT/Cinematic-97.cube
bin/data/LUT/Cinematic-98.cube
